////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2014-2022, Lawrence Livermore National Security, LLC.
// Produced at the Lawrence Livermore National Laboratory.
// Written by the LBANN Research Team (B. Van Essen, et al.) listed in
// the CONTRIBUTORS file. <lbann-dev@llnl.gov>
//
// LLNL-CODE-697807.
// All rights reserved.
//
// This file is part of LBANN: Livermore Big Artificial Neural Network
// Toolkit. For details, see http://software.llnl.gov/LBANN or
// https://github.com/LLNL/LBANN.
//
// Licensed under the Apache License, Version 2.0 (the "Licensee"); you
// may not use this file except in compliance with the License.  You may
// obtain a copy of the License at:
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
// implied. See the License for the specific language governing
// permissions and limitations under the license.
////////////////////////////////////////////////////////////////////////////////
#ifndef LBANN_CONFIG_HPP__
#define LBANN_CONFIG_HPP__

#include <El/hydrogen_config.h>

#ifdef HYDROGEN_HAVE_GPU
#define LBANN_HAS_GPU
#endif // HYDROGEN_HAVE_GPU

#ifdef HYDROGEN_HAVE_OMP_TASKLOOP
#define LBANN_HAVE_OMP_TASKLOOP
#endif // HYDROGEN_HAVE_OMP_TASKLOOP

/* Version string for LBANN */
#define LBANN_VERSION @LBANN_VERSION@
#cmakedefine LBANN_GIT_VERSION @LBANN_GIT_VERSION@

/* Defined if LBANN is in debug mode */
#cmakedefine LBANN_DEBUG

/* Defined if LBANN is linked to HWLOC */
#cmakedefine LBANN_TOPO_AWARE

#cmakedefine LBANN_GNU_LINUX

#cmakedefine LBANN_HAS_CEREAL
#ifdef LBANN_HAS_CEREAL
#define LBANN_HAS_CEREAL_BINARY_ARCHIVES
#cmakedefine LBANN_HAS_CEREAL_JSON_ARCHIVES
#cmakedefine LBANN_HAS_CEREAL_PORTABLE_BINARY_ARCHIVES
#cmakedefine LBANN_HAS_CEREAL_XML_ARCHIVES
#endif // LBANN_HAS_CEREAL

#cmakedefine LBANN_HAS_DIHYDROGEN
#cmakedefine LBANN_HAS_OPENCV
#cmakedefine LBANN_HAS_TBINF
#cmakedefine LBANN_HAS_CNPY
#cmakedefine LBANN_HAS_VTUNE
#cmakedefine LBANN_HAS_ALUMINUM
#cmakedefine LBANN_ALUMINUM_MPI_PASSTHROUGH
#cmakedefine LBANN_HAS_EMBEDDED_PYTHON
#cmakedefine LBANN_HAS_SHMEM
#cmakedefine LBANN_HAS_LARGESCALE_NODE2VEC
#cmakedefine LBANN_HAS_ONNX

#cmakedefine LBANN_DETERMINISTIC

#cmakedefine LBANN_HAS_CUDA
#cmakedefine LBANN_HAS_CUDNN
#cmakedefine LBANN_HAS_CUTENSOR
#ifdef LBANN_HAS_CUDA
#cmakedefine LBANN_HAS_NVSHMEM
#cmakedefine LBANN_NVPROF
#endif

#cmakedefine LBANN_HAS_ROCM
#cmakedefine LBANN_HAS_MIOPEN
#cmakedefine LBANN_HAS_ROCTRACER

#cmakedefine LBANN_HAS_ONEDNN
#cmakedefine LBANN_HAS_ONEDNN_CPU
#cmakedefine LBANN_HAS_ONEDNN_GPU

#if defined LBANN_HAS_CUDNN || defined LBANN_HAS_MIOPEN || defined LBANN_HAS_ONEDNN
#cmakedefine LBANN_HAS_DNN_LIB
#endif

#cmakedefine LBANN_GRU_LAYER_CUDNN_SUPPORTED
#cmakedefine LBANN_GRU_LAYER_ONEDNN_CPU_SUPPORTED

#cmakedefine LBANN_HAS_HALF
#cmakedefine LBANN_HAS_GPU_FP16

#cmakedefine LBANN_VTUNE

#cmakedefine LBANN_SYS_SENDFILE_OK

// API support for non-portable pthread functionality.
#cmakedefine LBANN_HAS_PTHREAD_AFFINITY_SUPPORT

#cmakedefine LBANN_HAS_DISTCONV

#cmakedefine LBANN_HAS_FFTW
#cmakedefine LBANN_HAS_FFTW_FLOAT
#cmakedefine LBANN_HAS_FFTW_DOUBLE

#cmakedefine LBANN_HAS_BOOST

// Define the LBANN datatype
namespace lbann
{
using DataType = @LBANN_DATATYPE@;
}// namespace lbann

#endif /* LBANN_CONFIG_H__ */
